{"ast":null,"code":"var _jsxFileName = \"C:\\\\Markatlas\\\\test\\\\Aitgiant-Test-Admin\\\\src\\\\components\\\\DownloadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DownloadPage = () => {\n  _s();\n  const [formData, setFormData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const formDataCollection = collection(db, 'formData');\n      const formDataSnapshot = await getDocs(formDataCollection);\n      const formDataData = formDataSnapshot.docs.map(doc => doc.data());\n      setFormData(formDataData);\n    };\n    fetchData();\n  }, []);\n  const convertToCSV = data => {\n    const header = Object.keys(data[0]).join(',');\n    const rows = data.map(obj => Object.values(obj).join(','));\n    return `${header}\\n${rows.join('\\n')}`;\n  };\n  const handleDownload = () => {\n    const csvData = convertToCSV(formData);\n    const blob = new Blob([csvData], {\n      type: 'text/csv'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'formData.csv';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Download Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownload,\n      children: \"Download CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(DownloadPage, \"lokSdkSLZfErX0cQNfNp9SJ3li8=\");\n_c = DownloadPage;\nexport default DownloadPage;\nvar _c;\n$RefreshReg$(_c, \"DownloadPage\");","map":{"version":3,"names":["React","useEffect","useState","collection","getDocs","db","jsxDEV","_jsxDEV","DownloadPage","_s","formData","setFormData","fetchData","formDataCollection","formDataSnapshot","formDataData","docs","map","doc","data","convertToCSV","header","Object","keys","join","rows","obj","values","handleDownload","csvData","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Markatlas/test/Aitgiant-Test-Admin/src/components/DownloadPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\n\r\nconst DownloadPage = () => {\r\n  const [formData, setFormData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const formDataCollection = collection(db, 'formData');\r\n      const formDataSnapshot = await getDocs(formDataCollection);\r\n      const formDataData = formDataSnapshot.docs.map(doc => doc.data());\r\n      setFormData(formDataData);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const convertToCSV = (data) => {\r\n    const header = Object.keys(data[0]).join(',');\r\n    const rows = data.map(obj => Object.values(obj).join(','));\r\n    return `${header}\\n${rows.join('\\n')}`;\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    const csvData = convertToCSV(formData);\r\n    const blob = new Blob([csvData], { type: 'text/csv' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'formData.csv';\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Download Data</h2>\r\n      <button onClick={handleDownload}>Download CSV</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownloadPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,OAAO,QAAQ,oBAAoB;AACxD,SAASC,EAAE,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,kBAAkB,GAAGV,UAAU,CAACE,EAAE,EAAE,UAAU,CAAC;MACrD,MAAMS,gBAAgB,GAAG,MAAMV,OAAO,CAACS,kBAAkB,CAAC;MAC1D,MAAME,YAAY,GAAGD,gBAAgB,CAACE,IAAI,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;MACjER,WAAW,CAACI,YAAY,CAAC;IAC3B,CAAC;IAEDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,YAAY,GAAID,IAAI,IAAK;IAC7B,MAAME,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC;IAC7C,MAAMC,IAAI,GAAGN,IAAI,CAACF,GAAG,CAACS,GAAG,IAAIJ,MAAM,CAACK,MAAM,CAACD,GAAG,CAAC,CAACF,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1D,OAAO,GAAGH,MAAM,KAAKI,IAAI,CAACD,IAAI,CAAC,IAAI,CAAC,EAAE;EACxC,CAAC;EAED,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,OAAO,GAAGT,YAAY,CAACV,QAAQ,CAAC;IACtC,MAAMoB,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,OAAO,CAAC,EAAE;MAAEG,IAAI,EAAE;IAAW,CAAC,CAAC;IACtD,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;IAC5C,MAAMO,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACrCF,CAAC,CAACG,IAAI,GAAGP,GAAG;IACZI,CAAC,CAACI,QAAQ,GAAG,cAAc;IAC3BH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,CAAC,CAAC;IAC5BA,CAAC,CAACO,KAAK,CAAC,CAAC;IACTN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,CAAC,CAAC;EAC9B,CAAC;EAED,oBACE9B,OAAA;IAAAuC,QAAA,gBACEvC,OAAA;MAAAuC,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB3C,OAAA;MAAQ4C,OAAO,EAAEvB,cAAe;MAAAkB,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV,CAAC;AAACzC,EAAA,CAtCID,YAAY;AAAA4C,EAAA,GAAZ5C,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}